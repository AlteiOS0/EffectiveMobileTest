services:
  app:
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - 3000:3000
    env_file:
      - .env.prod
    networks:
      - appeal-network
    volumes:
      - src:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
  
  postgres:
    image: postgres:latest
    restart: always
    user: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: appealdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - db:/var/postgresql/data
    networks:
      - appeal-network

  prisma-studio:
    image: node:latest
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    command: npm run prisma:studio
    env_file:
      - .env.prod
    ports:
      - 5555:5555
    networks:
      - appeal-network
    depends_on:
      postgres:
        condition: service_healthy
      app:
        condition: service_started


volumes:
  src:
  db:

networks:
  appeal-network:
    driver: bridge
    